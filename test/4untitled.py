# -*- coding: utf-8 -*-
"""4Untitled.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1r4W-gT4JoEKHRwvYxZV91PcBrzf9lBEx
"""

import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D
from tensorflow.keras.optimizers import Adam

# Load MNIST dataset
(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()

# Select a subset of the data (e.g., use only the first 10,000 samples)
x_train = x_train[:10000]  # Take the first 10,000 samples from x_train
y_train = y_train[:10000]  # Take the corresponding labels for those samples

# Reshape the data to be compatible with CNN input (height, width, channels)
x_train = x_train.reshape(x_train.shape[0], 28, 28, 1).astype('float32')
x_test = x_test.reshape(x_test.shape[0], 28, 28, 1).astype('float32')

# Normalize the pixel values to the range [0, 1]
x_train, x_test = x_train / 255.0, x_test / 255.0

# Resize the images to 64x64 as per your initial code
x_train_resized = tf.image.resize(x_train, (64, 64))
x_test_resized = tf.image.resize(x_test, (64, 64))

# Convert labels to categorical format (one-hot encoding)
y_train_categorical = tf.keras.utils.to_categorical(y_train, 10)
y_test_categorical = tf.keras.utils.to_categorical(y_test, 10)

model = Sequential([
    Conv2D(32, (3, 3), activation='relu', input_shape=(64, 64, 1)),  # Updated input shape (64, 64, 1)
    MaxPool2D(2, 2),
    Conv2D(64, (3, 3), activation='relu'),
    MaxPool2D(2, 2),
    Conv2D(64, (3, 3), activation='relu'),
    MaxPool2D(2, 2),
    Flatten(),
    Dense(100, activation='relu'),
    Dense(10, activation='softmax')  # Output layer for multi-class classification (10 classes for digits 0-9)
])

# Print the model summary
model.summary()

model.compile(optimizer=Adam(), loss='categorical_crossentropy', metrics=['accuracy'])

model.fit(x_train_resized, y_train_categorical, epochs=15, batch_size=batch_size, validation_data=(x_test_resized, y_test_categorical))